@import "./mixins";
@import "~redgoose-content-body";

.detail {
  margin: 40px 0 0;
  padding: 0 var(--size-side-padding);
  &__header {
    text-align: center;
    p {
      margin: 0;
      color: #aaa;
      font-size: 0;
      span {
        display: inline-block;
        font-family: var(--font-circular);
        font-size: .625rem;
        &:nth-child(n+2):before {
          content: '/';
          display: inline-block;
          margin: 0 5px;
          line-height: 1.2;
        }
      }
    }
    h2 {
      margin: 1px 0 0;
      padding: 0 20px;
      font-weight: 600;
      font-size: 1.75rem;
      letter-spacing: -1px;
      line-height: 1.2;
    }
  }
  &__body {
    margin: 20px 0 0;
  }
  &__like {
    margin: 40px 0 0;
    text-align: center;
  }
  &__error {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 50px 0;
    img {
      display: block;
      width: 232px;
      max-width: 100%;
    }
    p {
      margin: 30px 0 0;
      text-align: center;
      font-family: var(--font-circular);
      font-size: 1rem;
      font-weight: 400;
    }
  }
  @include responsive(tablet) {
    margin: 50px 0 0;
    &__wrap {
      max-width: 768px;
      margin: 0 auto;
    }
    &__header {
      p {
        span {
          font-size: .75rem;
        }
      }
      h2 {
        font-size: 2.25rem;
      }
    }
    &__body {
      margin: 40px 0 0;
    }
  }
  @include dark-mode() {
    &__header {
      p {
        color: #888;
      }
      h2 {
        color: #fff;
      }
    }
  }
}

.button-like {
  --color-like-step-1: #EB6635;
  --color-like-step-2: #B31E36;
  --color-like-step-3: #3422FF;
  display: block;
  margin: 0 auto;
  padding: 10px;
  border: none;
  background: transparent;
  font-size: 0;
  -webkit-tap-highlight-color: transparent;
  cursor: pointer;
  outline: none;
  width: 90px;
  height: 90px;
  border-radius: 50%;
  transition: box-shadow 100ms ease-out, background-color 250ms ease-out;
  user-select: none;
  span {
    display: block;
  }
  svg {
    display: block;
    margin: 0 auto;
    width: 38px;
    height: 38px;
    transition: transform 300ms cubic-bezier(.24, 1.35, .8, 1.22);
    .step-1 {
      color: var(--color-like-step-1);
    }
    .step-2 {
      color: var(--color-like-step-2);
    }
    .step-3 {
      color: var(--color-like-step-3);
    }
  }
  em {
    display: block;
    margin: -2px 0 0;
    font-style: normal;
    font-family: var(--font-circular);
    font-size: 11px;
    font-weight: 400;
    color: var(--color-text-blur);
    transition: opacity 150ms ease-out;
  }
  &:disabled {
    --color-like-step-1: #ddd;
    --color-like-step-2: #bbb;
    --color-like-step-3: #aaa;
    cursor: default;
    &:focus {
      outline: none;
    }
    &:active {
      svg {
        transform: none;
      }
    }
  }
  &:active,
  &:focus {
    background: rgba(#000, .05);
    svg {
      transform: scale(1.4) translateY(6px);
    }
    em {
      opacity: 0;
    }
  }
  &:disabled {
    &:active {
      background: none;
      em {
        opacity: 1;
      }
    }
  }
  @include dark-mode() {
    --color-like-step-1: #8ef01f;
    --color-like-step-2: var(--color-key);
    --color-like-step-3: #033615;
    &:disabled {
      --color-like-step-1: #666;
      --color-like-step-2: #444;
      --color-like-step-3: #333;
    }
    &:active,
    &:focus {
      background: rgba(#000, .15);
    }
  }
}

// content body
.redgoose-body img {
  display: block;
  position: relative;
  left: 50%;
  max-width: 100vw;
  transform: translateX(-50%);
  transform-origin: 50% 50%;
  margin: calc(var(--size-margin-vertical) * 2.5) 0 var(--size-margin-vertical);
  @include responsive(desktop) {
    max-width: 1280px;
    @include retina() {
      zoom: .75;
    }
  }
  @include responsive(max) {
    max-width: 1440px;
  }
  @media (max-width: 320px) {
    max-width: 100%;
  }
}
.redgoose-body {
  .grid-item {
    --grid-item-columns: 1;
    --grid-item-gap: 10px;
    position: relative;
    display: grid;
    grid-template-columns: repeat(var(--grid-item-columns, 1), 1fr);
    grid-gap: var(--grid-item-gap);
    margin: calc(var(--size-margin-vertical) * 2.5) auto var(--size-margin-vertical);
    left: 50%;
    transform: translateX(-50%);
    width: 100vw;
    max-width: 1280px;
    transform-origin: 50% 50%;
    > p {
      position: relative;
      margin: 0;
      box-sizing: border-box;
      padding-top: var(--padding-top, 100%);
      grid-column: var(--grid-column, auto);
      > img {
        position: absolute;
        margin: 0;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        max-width: none;
        max-height: none;
        transform: none;
        box-sizing: border-box;
        object-fit: cover;
        transition: opacity .2s ease-out;
        cursor: pointer;
        &:active {
          opacity: .5;
        }
      }
    }
    @for $i from 1 through 6 {
      &[data-mobile="#{$i}"] { --grid-item-columns: #{$i}; }
      > p[col="#{$i}"] {
        --padding-top: calc(100% / #{$i});
        --grid-column: span #{$i};
      }
    }
    @include responsive(tablet) {
      @for $i from 1 through 6 {
        &[data-tablet="#{$i}"] { --grid-item-columns: #{$i}; }
        > p[col-tablet="#{$i}"] {
          --padding-top: calc(100% / #{$i});
          --grid-column: span #{$i};
        }
      }
    }
    @include responsive(desktop) {
      width: 90vw;
      @for $i from 1 through 6 {
        &[data-desktop="#{$i}"] { --grid-item-columns: #{$i}; }
        > p[col-desktop="#{$i}"] {
          --padding-top: calc(100% / #{$i});
          --grid-column: span #{$i};
        }
      }
    }
    @include responsive(max) {
      @for $i from 1 through 6 {
        &[data-desktop-large="#{$i}"] { --grid-item-columns: #{$i}; }
        > p[col-desktop-large="#{$i}"] {
          --padding-top: calc(100% / #{$i});
          --grid-column: span #{$i};
        }
      }
    }
    @media (max-width: 320px) {
      max-width: 100%;
      transform: none;
      left: auto;
    }
    &:first-child {
      margin-top: 0;
    }
    &:last-child {
      margin-bottom: 0;
    }
  }
  .grid-group {
    margin: calc(var(--size-margin-vertical) * 2.5) auto var(--size-margin-vertical);
    > .grid-item {
      margin-top: var(--grid-item-gap);
      margin-bottom: var(--grid-item-gap);
      &:first-child {
        margin-top: 0;
      }
      &:last-child {
        margin-bottom: 0;
      }
    }
  }
}
